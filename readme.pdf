For my tokenizers i opted to use string arrays since it was easier for me to comprehend given the assignment. Usually I would use a tokenizer but if I was taking a string and manipualting it I felt leaving it as a string made my implementation easier to develope in my head. I had to import stdbool so I can use boolean functions in my code. I would attribute the boolean functions as I have as the backbone of my code. My codes iterates through the code until it meets a delimeter. My delimeters are either white spaces or operation signs. I made operations signs delimeters since a word can have brackets inside which would need to break the substring. If its a white space it skips if an operation it prints it out. I also used voids to print for me in special cases. My code also revolves around a substring method I made to break the strings into peices. once its a substring my boolean functions and splitter have a much better time as it divides and conquers the string. To identify the different operation types i used a void functions that reads and prints the substring. If its not found it prints out the operations individually. This allows there to be strings such as +++++, in which it will print increment, increment, plus. 
